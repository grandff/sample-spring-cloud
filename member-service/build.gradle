plugins {
	id 'org.springframework.boot' version '2.4.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    // querydsl
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
	id 'java'
}

group = 'com.cloud.sample.service'
version = '0.1'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()    
    maven { url "https://maven.egovframe.go.kr/maven/" } // egovframe maven 원격 저장소
}

ext {
	set('springCloudVersion', "2020.0.3")    
    set('log4j2.version', "2.17.1") // log4j 보안 패치
}

dependencies {
    //implementation files('../../module-common/build/libs/module-common-0.1.jar') // 공통 모듈, @ComponentScan(basePackages={"org.egovframe.cloud"}) 추가해야 적용된다
    implementation 'org.egovframe.cloud:module-common:0.1'
    implementation('org.egovframe.rte:org.egovframe.rte.fdl.cmmn:4.0.0') {
        exclude group: 'org.egovframe.rte', module: 'org.egovframe.rte.fdl.logging'
    }

	implementation 'org.springframework.boot:spring-boot-starter-web'	// web
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'	// eureka
	compileOnly 'org.projectlombok:lombok'	//lombok
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	    
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'    // config
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap' // config
	
    implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'  // bus + rabbitmq
    implementation 'org.springframework.boot:spring-boot-starter-actuator'	// actuator

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // jpa 	
	
	runtimeOnly 'com.h2database:h2' // h2 database	

	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign' // feignclient
	
    // querydsl
    implementation 'com.querydsl:querydsl-jpa'
    implementation 'com.querydsl:querydsl-core'
	
    // openapi docs
    implementation 'org.springdoc:springdoc-openapi-webmvc-core:1.5.8'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	
    implementation 'mysql:mysql-connector-java'	// mysql(dev only)
    implementation 'io.jsonwebtoken:jjwt:0.9.1'	// jwt
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

// querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
// querydsl 추가 끝